fib_sqrt=round(sqrt(fib), digits = 2)
fib_together=as.data.frame(cbind(fib,fib_sqrt))
# 2.b
#Label them as Group 1 and Group 2 by creating a new variable Fib_groups_label
fib_groups=rep(c(0,1),fiblength/2)
fib_groups_label=paste("Group",fib_groups+1)
fib_together=cbind(fib_together,fib_groups)
fib_2b = cbind(fib_together,fib_groups_label)
fib_group1=fib_together[fib_groups==0,c(1,2)]
fib_group2=fib_together[fib_groups==1,c(1,2)]
fib_groups_together=cbind(fib_group1,fib_group2)
# 3.a
give.summary <- function(mydata){
name.column=vector(mode="character",ncol(mydata))
mean.column=vector(mode="integer",ncol(mydata))
length.column=vector(mode="integer",ncol(mydata))
min.column=vector(mode="integer",ncol(mydata))
max.column=vector(mode="integer",ncol(mydata))
var.column=vector(mode="integer",ncol(mydata))
for (i in 1:ncol(mydata)){
name.column[i]=names(mydata)[i]
mean.column[i]=mean(mydata[,i])
length.column[i]=length(mydata[,i])
min.column[i]=min(mydata[,i])
max.column[i]=max(mydata[,i])
var.column[i]=var(mydata[,i])
}
summaryinfo=as.table(rbind(mean.column,length.column,min.column,max.column,var.column))
colnames(summaryinfo)=name.column
rownames(summaryinfo)=c("Mean","Length","Min","Max","Variance")
summaryinfo
}
give.summary(fib_group1)
give.summary(fib_group2)
# 3.b relationship between variables
# plotting with a logartimic y scale
plot(fib_group1$fib,log="y", type = "l")
lines(fib_group2$fib, col="red")
lines(fib_group1$fib_sqrt, col="blue")
# correlation, simple correlation table between the two columns in either table
cor(fib_group1)
cor(fib_group2)
#and across tables
cor(fib_group1$fib,fib_group2$fib_sqrt)
# 4.a & b Visualize
# plotting the fib and sqrt(fib) of both groups in one plot
plot(fib_group1, type = "l", col="red", xlab = "Step", ylab = "Fibonnaci value")
lines(fib_group2,col="blue")
legend("topleft",lwd=c(2.5,2.5), c("group 1", "group 2"), col=c("red","blue"))
# 5
write.csv(fib_2b, "D:/Fibonacci_test.csv")
used.packages=c("xgboost","stringr","qlcMatrix","rBayesianOptimization","mailR","rJava")
59316106-18035064
24*13
library(XML)
library(rvest)
html_url <- read_html(start_url)
start_url <- "https://www.transfermarkt.co.uk/arsenal-fc/startseite/verein/11?saison_id=2013"
html_url <- read_html(start_url)
players_values <- html_url %>% html_nodes("#yw1 .hauptlink") %>% html_text() %>% as.character()
players_values
league_url <- "https://www.transfermarkt.com/premier-league/startseite/wettbewerb/GB1"
league_html <- read_html(league_url)
team_urls <- league_html %>% html_nodes("#yw1 .no-border-links") %>% html_attr("href") %>% as.character()
team_urls
team_urls <- league_html %>% html_nodes(".hide-for-pad .tooltipstered") %>% html_attr("href") %>% as.character()
team_urls
team_urls <- league_html %>% html_nodes(".hide-for-pad .vereinprofil_tooltip") %>% html_attr("href") %>% as.character()
team_urls
strsplit(players_values[1])
strsplit(players_values[1]," ")
players_name_split <- strsplit(players_values[1]," ")
players_name <- paste(players_name_split[1],players_name_split[3])
players_name
players_name_split
players_name_split[[1]]
players_name <- paste(players_name_split[[1]][1],players_name_split[[1]][3])
players_name
seq(from = 1, to = length(players_values), by = 2)
index+1
index <- seq(from = 1, to = length(players_values), by = 2)
index+1
index <- seq(from = 1, to = length(players_values), by = 2)
names <- players_values[index]
values <- players_values[index+1]
players_name_split <- lapply(names,strsplit(x," ")
players_name <- paste(players_name_split[[1]][1],players_name_split[[1]][3])
values
players_name_split <- lapply(names,strsplit(x," "))
players_name_split <- lapply(names,strsplit())
get_name <- function(player_name){
pn_split <- strsplit(player_name," ")
pn <- paste(pn_split[[1]][1],pn_split[[1]][3])
return(pn)
}
get_name <- function(long_name){
pn_split <- strsplit(long_name," ")
pn <- paste(pn_split[[1]][1],pn_split[[1]][3])
return(pn)
}
players_name <- lapply(names,get_name())
long_name=names[1]
long_name
pn_split <- strsplit(long_name," ")
pn <- paste(pn_split[[1]][1],pn_split[[1]][3])
pn
players_name <- lapply(names,get_name(names))
players_name <- apply(names,get_name(names))
players_name <- apply(names,1,get_name(names))
players_name <- apply(names,1,get_name(x))
players_name <- apply(names,1,get_name(long_name))
index <- seq(from = 1, to = length(players_values), by = 2)
names <- players_values[index]
values <- players_values[index+1]
list_player_names <- rep(0,length(index))
for (i in length(index)){
list_player_names[i] <- get_name(names[i])
}
players_values_team <- cbind(list_player_names,values)
names(players_values_team) <- c("name","MV")
players_values_team
players_values <- html_url %>% html_nodes("#yw1 .hauptlink") %>% html_text() %>% as.character()
index <- seq(from = 1, to = length(players_values), by = 2)
names <- players_values[index]
names
values <- players_values[index+1]
vector(type="character", lenght=length(index))
vector(type="character", length=length(index))
list_player_names <- vector(mode="character", length=length(index))
list_player_names
for (i in length(index)){
list_player_names[i] <- get_name(names[i])
}
list_player_names
list_player_names <- vector(mode="character", length=length(index))
for (i in 1:length(index)){
list_player_names[i] <- get_name(names[i])
}
players_values_team <- cbind(list_player_names,values)
names(players_values_team) <- c("name","MV")
players_values_team
players_values_team <- cbind(list_player_names,values)
colnames(players_values_team) <- c("name","MV")
players_values_team
players_values_team <- cbind(list_player_names,values,1718)
players_values_team
colnames(players_values_team) <- c("name","MV","season")
?assign
s=12
past0(s,s+1)
paste0(s,s+1)
?get
s=15
league_url <- paste0("https://www.transfermarkt.com/premier-league/startseite/wettbewerb/GB1/plus/?saison_id=",2000+s)
league_html <- read_html(league_url)
teams_urls <- league_html %>% html_nodes(".hide-for-pad .vereinprofil_tooltip") %>% html_attr("href") %>% as.character()
assign(paste0("players_value_20",s),setNames(data.frame(matrix(ncol = 3, nrow = 0)), c("name", "MV", "season")))
team_url=teams_urls[1]
url <- paste0("https://www.transfermarkt.co.uk",team_url)
html_url <- read_html(team_url)
html_url <- read_html(url)
players_values <- html_url %>% html_nodes("#yw1 .hauptlink") %>% html_text() %>% as.character()
index <- seq(from = 1, to = length(players_values), by = 2)
names <- players_values[index]
values <- players_values[index+1]
list_player_names <- vector(mode="character", length=length(index))
for (i in 1:length(index)){
list_player_names[i] <- get_name(names[i])
}
players_values_team <- cbind(list_player_names,values,paste0(s,s+1))
colnames(players_values_team) <- c("name","MV","season")
players_values_team
assign(paste0("players_value_20",s),rbind(get(paste0("players_value_20",s))),players_values_team)
get(paste0("players_value_20",s))
assign(paste0("players_value_20",s),rbind(get(paste0("players_value_20",s)),players_values_team))
get(paste0("players_value_20",s))
get_name <- function(long_name){
pn_split <- strsplit(long_name," ")
pn <- paste(pn_split[[1]][1],pn_split[[1]][3])
return(pn)
}
for (s in 1:17){
# Overview of the teams in te league in certain year, used for the links to team pages
league_url <- paste0("https://www.transfermarkt.com/premier-league/startseite/wettbewerb/GB1/plus/?saison_id=",2000+s)
# read html file of page
league_html <- read_html(league_url)
#extract the links to the team pages
teams_urls <- league_html %>% html_nodes(".hide-for-pad .vereinprofil_tooltip") %>% html_attr("href") %>% as.character()
assign(paste0("players_value_20",s),setNames(data.frame(matrix(ncol = 3, nrow = 0)), c("name", "MV", "season")))
# Loop over the different team pages
for (team_url in teams_urls){
# paste the team links behind the main site adress
url <- paste0("https://www.transfermarkt.co.uk",team_url)
# read html file of page
html_url <- read_html(url)
# extract the player names and current market value
players_values <- html_url %>% html_nodes("#yw1 .hauptlink") %>% html_text() %>% as.character()
index <- seq(from = 1, to = length(players_values), by = 2)
names <- players_values[index]
values <- players_values[index+1]
list_player_names <- vector(mode="character", length=length(index))
for (i in 1:length(index)){
list_player_names[i] <- get_name(names[i])
}
players_values_team <- cbind(list_player_names,values,paste0(s,s+1))
colnames(players_values_team) <- c("name","MV","season")
assign(paste0("players_value_20",s),rbind(get(paste0("players_value_20",s)),players_values_team))
}
}
View(players_value_201)
View(players_value_204)
View(players_value_206)
library(XML)
library(rvest)
for (s in 1:17){
season_start <- 2000+s
# Overview of the teams in te league in certain year, used for the links to team pages
league_url <- paste0("https://www.transfermarkt.com/premier-league/startseite/wettbewerb/GB1/plus/?saison_id=",season_start)
# read html file of page
league_html <- read_html(league_url)
#extract the links to the team pages
teams_urls <- league_html %>% html_nodes(".hide-for-pad .vereinprofil_tooltip") %>% html_attr("href") %>% as.character()
assign(paste0("players_value_",season_start),setNames(data.frame(matrix(ncol = 3, nrow = 0)), c("name", "MV", "season")))
# Loop over the different team pages
for (team_url in teams_urls){
# paste the team links behind the main site adress
url <- paste0("https://www.transfermarkt.co.uk",team_url)
# read html file of page
html_url <- read_html(url)
# extract the player names and current market value
players_values <- html_url %>% html_nodes("#yw1 .hauptlink") %>% html_text() %>% as.character()
index <- seq(from = 1, to = length(players_values), by = 2)
names <- players_values[index]
values <- players_values[index+1]
players_values_team <- cbind(names,values,paste0(season_start,season_start+1))
colnames(players_values_team) <- c("name","MV","season")
assign(paste0("players_value_",season_start),rbind(get(paste0("players_value_",season_start)),players_values_team))
}
}
View(players_value_2002)
View(players_value_2009)
a=c("a","b","c","d")
paste(a)
paste0(a)
op=paste0(a)
op
paste0(a[1:3])
paste0(c(a[1:3])
)
paste0(strsplit(a[1:3],","))
paste0("a","b","c")
strsplit(a[1:3],",")
unlist(strsplit(a[1:3],","))
paste(a, collapse = ",")
paste(a[1:3], collapse = ",")
paste(a[c(1,3)], collapse = ",")
get_name(players_value_2009[1:10,1])
get_name <- function(long_name){
pn_split <- strsplit(long_name," ")
if (length(pn_split)==1){
pn <- substr(pn_split,1,nchar(pn_split)/2)}
else if (length(pn_split) > 1){
pn <- paste(pn_split[[1]][c(1:floor(length(pn_split)/2),length(pn_split))],collapse = " ")
}
return(pn)
}
get_name(players_value_2009[1:10,1])
long_name=players_value_2009[1:10,1]
pn_split <- strsplit(long_name," ")
long_name
unlist(long_name)
as.vector(long_name)
get_name <- function(long_name){
long_name <- as.vector(long_name)
pn_split <- strsplit(long_name," ")
if (length(pn_split)==1){
pn <- substr(pn_split,1,nchar(pn_split)/2)}
else if (length(pn_split) > 1){
pn <- paste(pn_split[[1]][c(1:floor(length(pn_split)/2),length(pn_split))],collapse = " ")
}
return(pn)
}
get_name(players_value_2009[1:10,1])
long_name
long_name <- as.vector(long_name)
pn_split <- strsplit(long_name," ")
pn_split
length(pn_split)==1
length(pn_split) > 1
paste(pn_split[[1]][c(1:floor(length(pn_split)/2),length(pn_split))],collapse = " ")
length(pn_split)
get_name(players_value_2009[10,1])
long_name=players_value_2009[10,1]
long_name <- as.vector(long_name)
pn_split <- strsplit(long_name," ")
pn_split
floor(length(pn_split)/2
)
length(pn_split)
get_name <- function(long_name){
long_name <- as.vector(long_name)
pn_split <- strsplit(long_name," ")
if (length(pn_split[[1]])==1){
pn <- substr(pn_split[[1]],1,nchar(pn_split[[1]])/2)}
else if (length(pn_split[[1]]) > 1){
pn <- paste(pn_split[[1]][c(1:floor(length(pn_split[[1]])/2),length(pn_split[[1]]))],collapse = " ")
}
return(pn)
}
get_name(players_value_2009[10,1])
get_name <- function(long_name){
long_name <- as.vector(long_name)
pn_split <- strsplit(long_name," ")
pn <- vector(mode = "character", length = length(long_name))
for (n in 1:length(long_name)){
if (length(pn_split[[n]])==1){
pn[n] <- substr(pn_split[[n]],1,nchar(pn_split[[n]])/2)}
else if (length(pn_split[[n]]) > 1){
pn[n] <- paste(pn_split[[n]][c(1:floor(length(pn_split[[n]])/2),length(pn_split[[n]]))],collapse = " ")
}
}
return(pn)
}
get_name(players_value_2009[10,1])
get_name(players_value_2009[1:10,1])
get_name(players_value_2009[1:100,1])
players_value_2009[,1]=get_name(players_value_2009[,1])
View(players_value_2008)
View(players_value_2006)
View(players_value_2005)
View(players_value_2004)
players_value_2006[,1]=get_name(players_value_2006[,1])
players_value_2007[,1]=get_name(players_value_2007[,1])
players_value_2008[,1]=get_name(players_value_2008[,1])
players_value_2010[,1]=get_name(players_value_2010[,1])
players_value_2011[,1]=get_name(players_value_2011[,1])
players_value_2012[,1]=get_name(players_value_2012[,1])
players_value_2013[,1]=get_name(players_value_2013[,1])
players_value_2014[,1]=get_name(players_value_2014[,1])
players_value_2015[,1]=get_name(players_value_2015[,1])
players_value_2016[,1]=get_name(players_value_2016[,1])
players_value_2017[,1]=get_name(players_value_2017[,1])
View(players_value_2017)
a="hallo"
substr(a,5,5)
substr(a,5)
a="44hallo33"
as.numeric(gsub("([0-9]+).*$", "\\1", a))
as.numeric(gsub("([0-9]+).*$", a))
as.numeric(gsub("([0-9]+)", "\\1", a))
as.numeric(gsub("([0-9]+)*$", "\\1", a))
as.numeric(gsub("([0-9]+).$", "\\1", a))
as.numeric(gsub("([0-9]+).*", "\\1", a))
as.numeric(gsub("([0-9]+).*", "", a))
as.numeric(gsub("([0-9]+).*", " ", a))
as.numeric(gsub("\\D", " ", a))
as.numeric(gsub("//D", " ", a))
as.numeric(gsub("\\D", "", a))
a="%44.66k"
as.numeric(gsub("\\D", "", a))
as.numeric(gsub("\\D\\.", "", a))
as.numeric(gsub("\\D.", "", a))
as.numeric(gsub("\\D+\\.", "", a))
as.numeric(gsub("[\\D][\\.]", "", a))
as.numeric(gsub("[\\D]+[\\.]", "", a))
as.numeric(gsub("[a-z]", "", a))
a
as.numeric(gsub("[[\\D]]", "", a))
as.numeric(gsub("[\\D]", "", a))
as.numeric(gsub("\\D", "", a))
get_mv <- function(long_value){
long_value <- as.vector(long_value)
mv <- vector(mode = "numeric", length = length(long_value))
for (n in 1:length(long_value)){
if (nchar(long_value[n])==0){
mv[n] <- 0
}else if (substr(long_value[n],nchar(long_value[n]),nchar(long_value[n])) == "k"){
mv[n] <- as.numeric(gsub("\\D", "", long_value[n])) *1000
}else if (substr(long_value[n],nchar(long_value[n]),nchar(long_value[n])) == "m"){
mv[n] <- as.numeric(gsub("\\D", "", long_value[n])) *1000000
}
}
return(mv)
}
players_value_2017[,1]=get_mv(players_value_2017[,1])
players_value_2017[,2]=get_mv(players_value_2017[,2])
long_value=players_value_2016[,2]
long_value <- as.vector(long_value)
long_value
length(long_value)
n
n=4
nchar(long_value[n])
long_value[n]
n=10
long_value[n]
nchar(long_value[n])
substr(long_value[n],nchar(long_value[n]),nchar(long_value[n])) == "k"
long_value[n] <- gsub(" ","",long_value[n])
long_value[n]
gsub(" ","",long_value[n])
gsub("^[a-z]","",long_value[n])
gsub("[^a-z]","",long_value[n])
gsub("[^0-9.]","",long_value[n])
gsub("[^0-9.]","",long_value[20])
gsub("[^0-9.]","",long_value[40])
ab=as.numeric(gsub("[^0-9.]","",long_value[40]))
ab*100
for (s in 1:17){
season_start <- 2000+s
# Overview of the teams in te league in certain year, used for the links to team pages
league_url <- paste0("https://www.transfermarkt.com/premier-league/startseite/wettbewerb/GB1/plus/?saison_id=",season_start)
# read html file of page
league_html <- read_html(league_url)
#extract the links to the team pages
teams_urls <- league_html %>% html_nodes(".hide-for-pad .vereinprofil_tooltip") %>% html_attr("href") %>% as.character()
assign(paste0("players_value_",season_start),setNames(data.frame(matrix(ncol = 3, nrow = 0)), c("name", "MV", "season")))
# Loop over the different team pages
for (team_url in teams_urls){
# paste the team links behind the main site adress
url <- paste0("https://www.transfermarkt.co.uk",team_url)
# read html file of page
html_url <- read_html(url)
# extract the player names and current market value
players_values <- html_url %>% html_nodes("#yw1 .hauptlink") %>% html_text() %>% as.character()
index <- seq(from = 1, to = length(players_values), by = 2)
names <- players_values[index]
values <- players_values[index+1]
players_values_team <- cbind(names,values,paste0(season_start,season_start+1))
colnames(players_values_team) <- c("name","MV","season")
assign(paste0("players_value_",season_start),rbind(get(paste0("players_value_",season_start)),players_values_team))
}
}
player_values_pl = rbind(players_value_2006,
players_value_2007,
players_value_2008,
players_value_2009,
players_value_2010,
players_value_2011,
players_value_2012,
players_value_2013,
players_value_2014,
players_value_2015,
players_value_2016,
players_value_2017)
View(player_values_pl)
player_values_raw=player_values_pl
setwd("D:/Het Project/Voetbal predictions/Premier-League")
write.csv(player_values_raw,"player_values_raw.csv")
get_name <- function(long_name){
long_name <- as.vector(long_name)
pn_split <- strsplit(long_name," ")
pn <- vector(mode = "character", length = length(long_name))
for (n in 1:length(long_name)){
if (length(pn_split[[n]])==1){
pn[n] <- substr(pn_split[[n]],1,nchar(pn_split[[n]])/2)}
else if (length(pn_split[[n]]) > 1){
pn[n] <- paste(pn_split[[n]][c(1:floor(length(pn_split[[n]])/2),length(pn_split[[n]]))],collapse = " ")
}
}
return(pn)
}
players_value_raw[,1]=get_name(players_value_raw[,1])
players_values_raw[,1]=get_name(players_values_raw[,1])
player_values_raw[,1]=get_name(player_values_raw[,1])
player_values_pl[,2]=get_mv(player_values_raw[,2])
View(player_values_raw)
long_value=player_values_raw[1:5,2]
long_value
long_value <- as.vector(long_value)
long_value
mv <- vector(mode = "numeric", length = length(long_value))
length(long_value)
n=2
nchar(long_value[n])
nchar(long_value[n])==1
gsub("[^a-z]","",long_value[n]) == "k"
gsub("[^a-z]","",long_value[n]) == "m"
as.numeric(gsub("[^0-9.]","",long_value[n])) *1000000
mv <- vector(mode = "numeric", length = length(long_value))
for (n in 1:length(long_value)){
long_value[n] <- gsub(" ","",long_value[n])
if (nchar(long_value[n])==1){
mv[n] <- 0
}else if (gsub("[^a-z]","",long_value[n]) == "k"){
mv[n] <- as.numeric(gsub("[^0-9.]","",long_value[n])) *1000
}else if (gsub("[^a-z]","",long_value[n]) == "m"){
mv[n] <- as.numeric(gsub("[^0-9.]","",long_value[n])) *1000000
}
}
mv
mv[2]
mv[5]
get_mv <- function(long_value){
long_value <- as.vector(long_value)
mv <- vector(mode = "numeric", length = length(long_value))
for (n in 1:length(long_value)){
if (nchar(long_value[n])==1){
mv[n] <- 0
}else if (gsub("[^a-z]","",long_value[n]) == "k"){
mv[n] <- as.numeric(gsub("[^0-9.]","",long_value[n])) *1000
}else if (gsub("[^a-z]","",long_value[n]) == "m"){
mv[n] <- as.numeric(gsub("[^0-9.]","",long_value[n])) *1000000
}
}
return(mv)
}
player_values_pl[,2]=get_mv(player_values_raw[,2])
player_values_raw[,1]=get_name(player_values_raw[,1])
player_values_pl[,2]=get_mv(player_values_raw[,2])
player_values_raw[,2]=get_mv(player_values_raw[,2])
write.csv(player_values_raw,"player_values_clean.csv")
